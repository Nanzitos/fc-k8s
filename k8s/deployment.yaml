apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver
  replicas: 1
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "nanzitos/hello-go:v5.5"

          resources:
            requests: # Mínimo de requisitos que a maquina precisa para rodar.
              cpu: 100m
              memory: 20Mi
            limits:
              cpu: 500m
              memory: 25Mi

          startupProbe: # Espera ate (periodSeconds*failureThreshold) 90s para INICIAR o readiness e o liveness. Basicamente verificar quando a aplicação esta pronta para ser liberada.
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 3
            failureThreshold: 30
          
          readinessProbe: # Fica verificando se a aplicação esta ativa, se ela cair ele PARA o trafego neste pod
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 3
            failureThreshold: 1
            # initialDelaySeconds: 10

          livenessProbe: # Como readiness fica verificando se a aplicação esta ativa, se cair ele REINICIA o pod
            httpGet:
              path: /healthz
              port: 8000
            periodSeconds: 5
            failureThreshold: 1
            timeoutSeconds: 1
            successThreshold: 1
            # initialDelaySeconds: 15

          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret
          volumeMounts:
            - mountPath: "/go/myfamily"
              name: config
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: configmap-family
            items:
              - key: members
                path: "family.txt"
          # env:
          # - name: NAME
          #   valueFrom:
          #     configMapKeyRef:
          #       name: goserver-env
          #       key: NAME
          # - name: AGE
          #   valueFrom:
          #     configMapKeyRef:
          #       name: goserver-env
          #       key: AGE
